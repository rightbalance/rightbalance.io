__NUXT_JSONP__("/solutions/client-side-development-enlighten-your-users-with-the-best-user-experience", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa){D[0]={id:E,depth:d,text:G};D[1]={id:H,depth:d,text:I};D[2]={id:J,depth:c,text:L};D[3]={id:M,depth:c,text:N};D[4]={id:O,depth:c,text:P};D[5]={id:Q,depth:d,text:R};D[6]={id:S,depth:c,text:T};D[7]={id:Y,depth:c,text:Z};D[8]={id:_,depth:c,text:z};D[9]={id:A,depth:d,text:y};D[10]={id:u,depth:d,text:v};return {data:[{}],fetch:[{page:{tags:["client-side","web","mobile","desktop","iot"],related_content:[],title:K,short_title:B,header_one:F,header_two:x,icon:C,cta_header:"Have any questions about Client-Side Development?",toc:D,body:{type:"root",children:[{type:a,tag:t,props:{id:E},children:[{type:a,tag:e,props:{href:"#what-is-client-side",ariaHidden:n,tabIndex:o},children:[{type:a,tag:p,props:{className:[m,l]},children:[]}]},{type:b,value:G}]},{type:a,tag:g,props:{},children:[{type:b,value:"Regardless of your rap music preference of the East Side vs the West Side, Client Side development is an important aspect of your engineering organization. Client-side development is centered around developing client-side applications. Mobile applications, websites, desktop apps are all examples of a client-side application. When your users interact with your product, the only thing they see is your client-side user interface. That’s why building your client-side applications right is crucial to deliver an enlightening user experience."}]},{type:a,tag:t,props:{id:H},children:[{type:a,tag:e,props:{href:"#client-side-application-architecture",ariaHidden:n,tabIndex:o},children:[{type:a,tag:p,props:{className:[m,l]},children:[]}]},{type:b,value:I}]},{type:a,tag:g,props:{},children:[{type:b,value:"A typical client-side application consists of the following main components:"}]},{type:a,tag:r,props:{id:J},children:[{type:a,tag:e,props:{href:"#user-interface",ariaHidden:n,tabIndex:o},children:[{type:a,tag:p,props:{className:[m,l]},children:[]}]},{type:b,value:L}]},{type:a,tag:g,props:{},children:[{type:b,value:"All visual elements like buttons, different color backgrounds, images, etc, and most of the interactions between them are your user interface. At this level, you’ll work primarily with the layout frameworks like "},{type:a,tag:e,props:{href:"https:\u002F\u002Fdeveloper.apple.com\u002Fdocumentation\u002Fuikit",rel:[j,k,h],target:i},children:[{type:b,value:"UIKit"}]},{type:b,value:" \u002F "},{type:a,tag:e,props:{href:"https:\u002F\u002Fdeveloper.apple.com\u002Fxcode\u002Fswiftui\u002F",rel:[j,k,h],target:i,title:"Swift UI framework from Apple"},children:[{type:b,value:"Swift UI"}]},{type:b,value:" for iOS, your favorite Javascript and CSS framework for your web application like "},{type:a,tag:e,props:{href:"https:\u002F\u002Freactjs.org\u002F",rel:[j,k,h],target:i,title:"React JS Framework"},children:[{type:b,value:"React"}]},{type:b,value:w},{type:a,tag:e,props:{href:"https:\u002F\u002Fvuejs.org\u002F",rel:[j,k,h],target:i,title:"Vue JS Framework"},children:[{type:b,value:"Vue.js"}]},{type:b,value:w},{type:a,tag:e,props:{href:"https:\u002F\u002Fsvelte.dev\u002F",rel:[j,k,h],target:i,title:U},children:[{type:b,value:U}]},{type:b,value:", etc."}]},{type:a,tag:g,props:{},children:[{type:b,value:"All code powering your UI runs in the main thread of the application. The main thread is the thread responsible for rendering your UI. You want to be mindful of the operations you perform on the main thread. Heavy work should be offloaded to the background thread instead. This way the UI stays responsive and the users have some great user experience even if there is some heavy work happening in the background at the same time."}]},{type:a,tag:r,props:{id:M},children:[{type:a,tag:e,props:{href:"#networking-layer",ariaHidden:n,tabIndex:o},children:[{type:a,tag:p,props:{className:[m,l]},children:[]}]},{type:b,value:N}]},{type:a,tag:g,props:{},children:[{type:b,value:"The networking layer’s main purpose is to fetch and save the data to the "},{type:a,tag:"nuxt-link",props:{to:V},children:[{type:b,value:"Backend API"}]},{type:b,value:". This layer performs the actual network requests, parses the data coming from the API. Last but not least, it saves the parsed data into the Data Store Layer in the shape the application expects it."}]},{type:a,tag:r,props:{id:O},children:[{type:a,tag:e,props:{href:"#data-store",ariaHidden:n,tabIndex:o},children:[{type:a,tag:p,props:{className:[m,l]},children:[]}]},{type:b,value:P}]},{type:a,tag:g,props:{},children:[{type:b,value:"The datastore layer is responsible for storing and persisting the data on the client (either in memory or on disk). UI layer gets its data from the store as it changes. The networking layer updates the data in the store as it comes from the API. This way both the UI layer and the networking layer are abstracted and decoupled from each other and can be developed independently."}]},{type:a,tag:g,props:{},children:[{type:a,tag:e,props:{href:"https:\u002F\u002Fdeveloper.apple.com\u002Flibrary\u002Farchive\u002Fdocumentation\u002FCocoa\u002FConceptual\u002FCoreData\u002Findex.html",rel:[j,k,h],target:i,title:"CoreData framework"},children:[{type:b,value:"CoreData"}]},{type:b,value:" on iOS, "},{type:a,tag:e,props:{href:"https:\u002F\u002Fvuex.vuejs.org\u002F",rel:[j,k,h],target:i,title:"Vuex - a reactive store for Vue.js"},children:[{type:b,value:"Vuex"}]},{type:b,value:" for Vue.js, "},{type:a,tag:e,props:{href:"https:\u002F\u002Fredux.js.org\u002F",rel:[j,k,h],target:i,title:"Store for React"},children:[{type:b,value:"Redux"}]},{type:b,value:" for React, are all examples of a data store for your client-side application."}]},{type:a,tag:t,props:{id:Q},children:[{type:a,tag:e,props:{href:"#focus-areas",ariaHidden:n,tabIndex:o},children:[{type:a,tag:p,props:{className:[m,l]},children:[]}]},{type:b,value:R}]},{type:a,tag:g,props:{},children:[{type:b,value:"Because your client-side applications’ main function is to interact directly with the user, the primary focus is on the following areas."}]},{type:a,tag:r,props:{id:S},children:[{type:a,tag:e,props:{href:"#look-and-feel",ariaHidden:n,tabIndex:o},children:[{type:a,tag:p,props:{className:[m,l]},children:[]}]},{type:b,value:T}]},{type:a,tag:g,props:{},children:[{type:b,value:"Your users will be using your UI every single time they interact with your product. That’s why it’s important to have a beautiful, aesthetically pleasing design for your app. When you hold the phone with your application in your hands, or when you have it on the screen of your desktop computer, you should wow over how great the look and feel is. The elements should be clearly positioned on the screen, the user should be able to navigate to each part of the app effortlessly. Adding subtle animations to some UI elements where needed makes the application UI really pop."}]},{type:a,tag:r,props:{id:Y},children:[{type:a,tag:e,props:{href:"#performance",ariaHidden:n,tabIndex:o},children:[{type:a,tag:p,props:{className:[m,l]},children:[]}]},{type:b,value:Z}]},{type:a,tag:g,props:{},children:[{type:b,value:"Your client-side application runs on a device with some limited resources. That’s why the performance is so important because you don’t have the infinitely scalable capacity like you have on the backend. The key here is to offload all heavy work from the main thread to the background thread. Being mindful of your memory usage and your disk usage goes a long way."}]},{type:a,tag:r,props:{id:_},children:[{type:a,tag:e,props:{href:"#resiliency",ariaHidden:n,tabIndex:o},children:[{type:a,tag:p,props:{className:[m,l]},children:[]}]},{type:b,value:z}]},{type:a,tag:g,props:{},children:[{type:b,value:"Your backend server is always plugged into the outlet and has access to the Internet. Unfortunately, it’s not the case with client-side devices. Your user's phone or a laptop can lose Internet connectivity at any time, run out of a battery, or even run out of memory since the capacity is limited. Client-side operating systems are very aggressive with freeing up precious resources. On Android or iOS, your app can be just killed by the operating system at any time when your app is in the background. In addition to it, your app should never crash at all costs. An app crash has a massively negative impact on your user growth and retention. While implementing your features on the client, lean on the safe side, write a lot of safeguards and null checks. Save your data locally or on the server so you can pick up where you left off in case the user quits the app and opens it at a later time."}]},{type:a,tag:t,props:{id:A},children:[{type:a,tag:e,props:{href:"#automated-testing-and-cicd",ariaHidden:n,tabIndex:o},children:[{type:a,tag:p,props:{className:[m,l]},children:[]}]},{type:b,value:y}]},{type:a,tag:g,props:{},children:[{type:b,value:"Writing tests on the client is very straightforward at the networking level. You’ll be able to write some good unit tests which are fast to execute. On another hand, UI testing is more complicated, less flexible, and that’s where you get the most coverage and benefit. That’s why we recommend writing most of the unit tests at the networking level and writing a few UI tests for the major flows in the app. While writing UI tests, it’s important to keep in mind that some elements can appear on the screen with some delays. In addition to it, it’s best to mock the network calls to avoid some unexpected test failures due to network latency."}]},{type:a,tag:g,props:{},children:[{type:b,value:"Another thing to keep in mind is that there are many variations of client devices, browsers, and operating systems. We recommend running your automated and manual tests on the farm of devices. "},{type:a,tag:e,props:{href:"https:\u002F\u002Faws.amazon.com\u002Fdevice-farm\u002F",rel:[j,k,h],target:i,title:"AWS Device Farm overview"},children:[{type:b,value:"AWS Device Farm"}]},{type:b,value:w},{type:a,tag:e,props:{href:"https:\u002F\u002Ffirebase.google.com\u002Fdocs\u002Ftest-lab",rel:[j,k,h],target:i,title:"Firebase Test Lab page"},children:[{type:b,value:"Firebase Test Lab"}]},{type:b,value:w},{type:a,tag:e,props:{href:"https:\u002F\u002Fcrossbrowsertesting.com\u002F",rel:[j,k,h],target:i,title:"Cross Browser Testing Page"},children:[{type:b,value:"Cross Browser Testing"}]},{type:b,value:", or "},{type:a,tag:e,props:{href:"https:\u002F\u002Fwww.browserstack.com\u002F",rel:[j,k,h],target:i,title:"Browser Stack page"},children:[{type:b,value:"Browser Stack"}]},{type:b,value:" are all great solutions you can use to solve this problem."}]},{type:a,tag:g,props:{},children:[{type:b,value:"Your CI\u002FCD pipeline should be capable of testing and building your apps for testing and distribution. We recommend "},{type:a,tag:e,props:{href:"https:\u002F\u002Fdeveloper.apple.com\u002Ftestflight\u002F",rel:[j,k,h],target:i,title:"TestFlight overview"},children:[{type:b,value:"TestFlight"}]},{type:b,value:" for iOS, "},{type:a,tag:e,props:{href:"https:\u002F\u002Ffirebase.google.com\u002Fdocs\u002Fapp-distribution",rel:[j,k,h],target:i,title:"Firebase page"},children:[{type:b,value:"Firebase"}]},{type:b,value:" for Android. For your web and desktop applications, you can use your internal test environment."}]},{type:a,tag:t,props:{id:u},children:[{type:a,tag:e,props:{href:"#conclusion",ariaHidden:n,tabIndex:o},children:[{type:a,tag:p,props:{className:[m,l]},children:[]}]},{type:b,value:v}]},{type:a,tag:g,props:{},children:[{type:b,value:"As you can see, client-side development is a different beast from your backend or infrastructure development. With the main focus on look and feel, your app’s mission is to deliver the best user experience possible for the user while using the limited resources efficiently on the device. Due to the wide number of combinations of client devices and operating systems, it’s best to equip yourself with some cross-platform testing tools. Your CI\u002FCD pipeline should be capable of building and distributing apps for testing and production use for all platforms."}]},{type:a,tag:g,props:{},children:[{type:b,value:"Diving into the client-side development can be overwhelming at first, especially coming from the backend side of things. If you need some help with getting things set up, don’t hesitate to reach out. We’ve done it right many times for some great companies."}]}]},dir:"\u002Fsolutions",path:W,extension:".md",slug:X,createdAt:new Date(1678214302733),updatedAt:new Date(1678214302733)},ctaHref:"https:\u002F\u002Fairtable.com\u002Fshr9h6C35G3nLuwoQ",contentPages:[{draft:q,headerOne:"Backend",headerTwo:"API",headerThree:f,imageUrl:f,icon:"cloud-tags",icons:f,shortTitle:"Backend API Development",slug:"api-development-scale-to-millions-of-users-with-a-robust-backend",tablesOfContent:[{id:"what-is-backend-api",depth:d,text:"What is Backend API"},{id:"api-anatomy",depth:d,text:"API Anatomy"},{id:"api-gateway",depth:c,text:"API Gateway"},{id:"service-layer",depth:c,text:"Service Layer"},{id:"how-to-build-apis-right",depth:d,text:"How to Build APIs Right"},{id:"architecture",depth:c,text:"Architecture"},{id:"scalability",depth:c,text:"Scalability"},{id:"cost-efficiency",depth:c,text:"Cost Efficiency"},{id:u,depth:d,text:v}],isOpen:q,title:"API Development: Scale to Millions of Users With a Robust Backend",heroImage:f,to:V,cta:s},{draft:q,headerOne:$,headerTwo:"",headerThree:f,imageUrl:f,icon:"flask-outline",icons:f,shortTitle:$,slug:"automated-tests-get-dividends-with-every-test-run",tablesOfContent:[{id:"what-is-automated-testing",depth:d,text:"What Is Automated Testing"},{id:"advantages-of-automated-testing",depth:d,text:"Advantages of Automated Testing"},{id:"write-robust-and-modular-code",depth:c,text:"Write Robust and Modular Code"},{id:"refactor",depth:c,text:"Refactor"},{id:"minimize-bugs",depth:c,text:"Minimize Bugs"},{id:"tests-are-your-documentation",depth:c,text:"Tests are Your Documentation"},{id:"tests-prove-that-your-system-works",depth:c,text:"Tests Prove That Your System Works"},{id:"get-dividends-with-each-test-run",depth:c,text:"Get Dividends With Each Test Run"},{id:"disadvantages-of-automated-testing",depth:d,text:"Disadvantages of Automated Testing"},{id:"efficient-testing-strategy",depth:d,text:"Efficient Testing Strategy"},{id:"anatomy-of-automated-testing",depth:d,text:"Anatomy of Automated Testing"},{id:"unit-tests",depth:c,text:"Unit Tests"},{id:"integration-tests",depth:c,text:"Integration Tests"},{id:"ui--api-tests",depth:c,text:"UI \u002F API Tests"},{id:"test-suite",depth:c,text:"Test Suite"},{id:"load-tests",depth:c,text:"Load Tests"},{id:"how-to-start-with-automated-testing",depth:d,text:"How To Start With Automated Testing"},{id:"advanced-topics",depth:d,text:"Advanced Topics"},{id:"book-references",depth:d,text:"Book References"},{id:u,depth:d,text:v}],isOpen:q,title:"Automated Tests: Get Dividends With Every Test Run",heroImage:f,to:"\u002Fsolutions\u002Fautomated-tests-get-dividends-with-every-test-run",cta:s},{draft:q,headerOne:aa,headerTwo:"Pipelines",headerThree:f,imageUrl:f,icon:"pipe-disconnected",icons:f,shortTitle:aa,slug:"ci-cd-like-ac-dc-rock-n-roll-with-continuous-integration-and-continuous-delivery",tablesOfContent:[{id:"what-is-cicd",depth:d,text:"What is CI\u002FCD"},{id:"continuous-integration",depth:c,text:"Continuous Integration"},{id:"continuous-delivery",depth:c,text:"Continuous Delivery"},{id:"advantages-of-using-cicd",depth:d,text:"Advantages of using CI\u002FCD"},{id:"speed",depth:c,text:"Speed"},{id:"quality",depth:c,text:"Quality"},{id:"consistency",depth:c,text:"Consistency"},{id:"anatomy-of-a-cicd-pipeline",depth:d,text:"Anatomy of a CI\u002FCD Pipeline"},{id:"build",depth:c,text:"Build"},{id:"test",depth:c,text:"Test"},{id:"deploy",depth:c,text:"Deploy"},{id:"verify",depth:c,text:"Verify"},{id:"notify",depth:c,text:"Notify"},{id:"how-you-can-implement-cicd",depth:d,text:"How You Can Implement CI\u002FCD"},{id:"lock-in-your-branching-strategy",depth:c,text:"Lock in Your Branching Strategy"},{id:"build-test-deploy",depth:c,text:"Build, Test, Deploy"},{id:"pipeline-it",depth:c,text:"Pipeline it"},{id:u,depth:d,text:v}],isOpen:q,title:"CI\u002FCD like AC⚡️DC: Rock’n’Roll with Continuous Integration and Continuous Delivery",heroImage:f,to:"\u002Fsolutions\u002Fci-cd-like-ac-dc-rock-n-roll-with-continuous-integration-and-continuous-delivery",cta:s},{draft:q,headerOne:F,headerTwo:x,headerThree:f,imageUrl:f,icon:C,icons:f,shortTitle:B,slug:X,tablesOfContent:D,isOpen:true,title:K,heroImage:f,to:W,cta:s},{draft:q,headerOne:"Serverless",headerTwo:x,headerThree:f,imageUrl:f,icon:"lambda",icons:f,shortTitle:"Serverless Software Development",slug:"serverless-software-development-focus-on-features-instead-of-the-infrastructure",tablesOfContent:[{id:"what-is-serverless",depth:d,text:"What is Serverless"},{id:"why-serverless-matters",depth:d,text:"Why Serverless Matters"},{id:"pay-per-use",depth:c,text:"Pay per use"},{id:"all-major-cloud-providers-support-serverless",depth:c,text:"All major cloud providers support Serverless"},{id:"infinitely-scalable",depth:c,text:"Infinitely Scalable"},{id:"be-at-the-forefront-of-technology",depth:c,text:"Be At the Forefront of Technology"},{id:"business-problems-serverless-solves",depth:d,text:"Business Problems Serverless Solves"},{id:"power-your-websites-mobile-apps-and-iot-devices",depth:c,text:"Power your Websites, Mobile Apps, and IoT Devices"},{id:"deliver-relevant-data-to-stakeholders",depth:c,text:"Deliver relevant data to stakeholders"},{id:"reduce-infrastructure-cost",depth:c,text:"Reduce Infrastructure Cost"},{id:"increase-development-velocity",depth:c,text:"Increase Development Velocity"},{id:"handle-traffic-spikes-seamlessly",depth:c,text:"Handle Traffic Spikes Seamlessly"},{id:"solution",depth:d,text:"Solution"},{id:"strong-architecture",depth:c,text:"Strong Architecture"},{id:"efficient-monitoring-and-alerting",depth:c,text:"Efficient Monitoring and Alerting"},{id:"automated-testing",depth:c,text:"Automated Testing"},{id:"execution",depth:d,text:"Execution"},{id:"gradual-integration",depth:c,text:"Gradual Integration"},{id:"system-rewrite",depth:c,text:"System Rewrite"}],isOpen:q,title:"Serverless Software Development: Focus on Features, instead of the Infrastructure",heroImage:f,to:"\u002Fsolutions\u002Fserverless-software-development-focus-on-features-instead-of-the-infrastructure",cta:s}]}],mutations:f}}("element","text",3,2,"a",void 0,"p","noreferrer","_blank","nofollow","noopener","icon-link","icon","true",-1,"span",false,"h3","solution_read","h2","conclusion","Conclusion",", ","Development","Automated Testing and CI\u002FCD","Resiliency","automated-testing-and-cicd","Client-Side Development","devices",Array(11),"what-is-client-side","Client-Side","What is Client-Side","client-side-application-architecture","Client-Side Application Architecture","user-interface","Client-Side Development: Enlighten Your Users With the Best User Experience","User Interface","networking-layer","Networking Layer","data-store","Data Store","focus-areas","Focus areas","look-and-feel","Look and Feel","Svelte","\u002Fsolutions\u002Fapi-development-scale-to-millions-of-users-with-a-robust-backend","\u002Fsolutions\u002Fclient-side-development-enlighten-your-users-with-the-best-user-experience","client-side-development-enlighten-your-users-with-the-best-user-experience","performance","Performance","resiliency","Automated Tests","CI \u002F CD")));