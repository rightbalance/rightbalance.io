[{"_path":"/solutions/serverless-software-development-focus-on-features-instead-of-the-infrastructure","_dir":"solutions","_draft":false,"_partial":false,"_locale":"","title":"Serverless Software Development: Focus on Features, instead of the Infrastructure","description":"","cta_header":"Have any questions about Serverless?","tags":["serverless","aws"],"related_content":[],"short_title":"Serverless Software Development","header_one":"Serverless","header_two":"Development","icon":"lambda","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"what-is-serverless"},"children":[{"type":"text","value":"What is Serverless"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Serverless, as the name implies, is a technology allowing you to run your backend applications without managing the server infrastructure. You deploy your code and your cloud provider manages the servers for you under the hood. It allows you to focus on your code minimizing the amount of effort spent on the infrastructure."}]},{"type":"element","tag":"h2","props":{"id":"why-serverless-matters"},"children":[{"type":"text","value":"Why Serverless Matters"}]},{"type":"element","tag":"h3","props":{"id":"pay-per-use"},"children":[{"type":"text","value":"Pay per use"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"No need to pay for idle servers. With Serverless, you only pay for the time it takes to run your application. If you arenâ€™t using your system, you donâ€™t incur any runtime costs. Itâ€™s ideal for your development, staging, and QA environments which arenâ€™t used 24/7."}]},{"type":"element","tag":"h3","props":{"id":"all-major-cloud-providers-support-serverless"},"children":[{"type":"text","value":"All major cloud providers support Serverless"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://aws.amazon.com/serverless/","rel":["nofollow"],":target":"\\_blank"},"children":[{"type":"text","value":"Amazon AWS"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"https://cloud.google.com/serverless","rel":["nofollow"],":target":"\\_blank"},"children":[{"type":"text","value":"Google GCP"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"https://azure.microsoft.com/en-us/solutions/serverless/","rel":["nofollow"],":target":"\\_blank"},"children":[{"type":"text","value":"Microsoft Azure"}]},{"type":"text","value":", and many more providers support Serverless technology. Most of them continue to integrate Serverless further into more of their products. Weâ€™re already seeing "},{"type":"element","tag":"a","props":{"href":"https://aws.amazon.com/rds/aurora/serverless/","rel":["nofollow"],":target":"\\_blank"},"children":[{"type":"text","value":"Amazon Aurora Serverless"}]},{"type":"text","value":" database and "},{"type":"element","tag":"a","props":{"href":"https://aws.amazon.com/fargate/","rel":["nofollow"],":target":"\\_blank"},"children":[{"type":"text","value":"Fargate Container"}]},{"type":"text","value":" engine following the same Serverless principles of paying for only when the resources are used. Serverless is entering the mainstream phase now. There are plenty of resources and libraries online to help you."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Cloud Providers","className":["left"],"src":"https://images.rightbalance.io/uploads/cloud-providers.svg"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"infinitely-scalable"},"children":[{"type":"text","value":"Infinitely Scalable"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Serverless resources grow and shrink automatically with your demand. More Serverless resources are spawned up when more requests are coming. If there are no requests at all, no resources are running."}]},{"type":"element","tag":"h3","props":{"id":"be-at-the-forefront-of-technology"},"children":[{"type":"text","value":"Be At the Forefront of Technology"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Running on your own hardware is complicated and unnecessary (unless youâ€™re at a scale of Google or Amazon), so as running on dedicated virtualized servers (like "},{"type":"element","tag":"a","props":{"href":"https://aws.amazon.com/ec2/","rel":["nofollow"],":target":"\\_blank"},"children":[{"type":"text","value":"AWS EC2"}]},{"type":"text","value":"). Over the next 5 years, Serverless will become the norm and a default choice for new development. Working with new technology is exciting for you and your team! Donâ€™t miss the opportunity to be ahead of the game instead of playing catch up."}]},{"type":"element","tag":"h2","props":{"id":"business-problems-serverless-solves"},"children":[{"type":"text","value":"Business Problems Serverless Solves"}]},{"type":"element","tag":"h3","props":{"id":"power-your-websites-mobile-apps-and-iot-devices"},"children":[{"type":"text","value":"Power your Websites, Mobile Apps, and IoT Devices"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Serverless functions plugs in directly into your API Gateway or GraphQL endpoints. This means they can power your client applications like mobile apps, websites, IoT devices, and the rest of the backend microservices."}]},{"type":"element","tag":"h3","props":{"id":"deliver-relevant-data-to-stakeholders"},"children":[{"type":"text","value":"Deliver relevant data to stakeholders"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In our day and age, having access to the relevant data is everything. Itâ€™s very straightforward to connect your serverless function to a queue, a pub-sub system, a database or even your file storage bucket. In the case of AWS, all of the major data services like "},{"type":"element","tag":"a","props":{"href":"https://aws.amazon.com/s3/","rel":["nofollow"],":target":"\\_blank"},"children":[{"type":"text","value":"S3"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"https://aws.amazon.com/dynamodb/","rel":["nofollow"],":target":"\\_blank"},"children":[{"type":"text","value":"DynamoDB"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"https://aws.amazon.com/rds/","rel":["nofollow"],":target":"\\_blank"},"children":[{"type":"text","value":"RDS"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"https://aws.amazon.com/sns/","rel":["nofollow"],":target":"\\_blank"},"children":[{"type":"text","value":"SNS"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"https://aws.amazon.com/sqs/","rel":["nofollow"],":target":"\\_blank"},"children":[{"type":"text","value":"SQS"}]},{"type":"text","value":" all support the ability to trigger a serverless function to take the data that just arrived, transform it and deliver it to some relevant parties. No need to build some brutal long-running ETL jobs introducing some update delays. Process the data as it comes in, and deliver it to your data warehouse close to real-time."}]},{"type":"element","tag":"h3","props":{"id":"reduce-infrastructure-cost"},"children":[{"type":"text","value":"Reduce Infrastructure Cost"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"No need to pay for your servers sitting around doing no work, right? Same for your database, if itâ€™s not being used in your QA environment overnight, why pay for it? By moving more and more resources to Serverless, you reduce your costs and make your CFO happy ðŸ’¸"}]},{"type":"element","tag":"h3","props":{"id":"increase-development-velocity"},"children":[{"type":"text","value":"Increase Development Velocity"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Business opportunities come and go quickly. Being able to develop your software fast, deploy it, and have it run automatically is key for growing your business. Serverless technology allows you to do exactly that. Just focus on your features and let your cloud provider take care of the infrastructure for you."}]},{"type":"element","tag":"h3","props":{"id":"handle-traffic-spikes-seamlessly"},"children":[{"type":"text","value":"Handle Traffic Spikes Seamlessly"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ever got a notification about your servers going down because of a marketing campaign bringing more traffic? With a well-architected Serverless system, with all bottlenecks removed (or moved to Serverless) youâ€™ll be able to support any unexpected spike in traffic. With more traffic coming to the system, more serverless functions are spawned up to support the increasing demand. And when the traffic is tailing off, fewer serverless functions are invoked to keep your system cost-effective."}]},{"type":"element","tag":"h2","props":{"id":"solution","className":["heading"]},"children":[{"type":"text","value":"Solution"}]},{"type":"element","tag":"h3","props":{"id":"strong-architecture","className":["subheading"]},"children":[{"type":"text","value":"Strong Architecture"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Putting together some solid architecture goes a long way. To take advantage of Serverless technology, the key is to start thinking about your feature development in a new way."}]},{"type":"element","tag":"h4","props":{"id":"microservices","className":["subsubheading"]},"children":[{"type":"text","value":"Microservices"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Monolithic architectures donâ€™t scale well. To take advantage of an Infinitely Scalable Serverless technology, we need to start thinking about our systems as a set of modules. One module for user management, another module for order processing, and so on, and so forth. All modules (aka microservices) are talking to each other forming a robust scalable system where each module can be scaled individually as opposed to scaling the entire monolith."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Illustrating the difference between monolith and microservices","src":"https://images.rightbalance.io/uploads/monolith-microservices-2.svg"},"children":[]}]},{"type":"element","tag":"h4","props":{"id":"event-driven-programming","className":["subsubheading"]},"children":[{"type":"text","value":"Event-Driven Programming"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software systems are built to automate complex processes. Each process consists of some operations. If all operations are a sequential set of steps built in a monolithic way, itâ€™s hard to scale it, hard to maintain it and develop it because all steps are tightly coupled. To take full advantage of Serverless, weâ€™ll need to break down the complex processes into individual steps triggered by events. An example is triggering a Lambda function when a file gets uploaded to an S3 bucket. Once the file arrives, the Lambda gets triggered to process a file and write it to a data warehouse. Doing so allows us to use AWS Lambda being able to process as many files as we want to lean on the cloud provider to do the scaling work for us."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Event driven programming illustration","src":"https://images.rightbalance.io/uploads/event-driven-programming-2.svg"},"children":[]}]},{"type":"element","tag":"h4","props":{"id":"automatic-deployments-ci-cd","className":["subsubheading"]},"children":[{"type":"text","value":"Automatic Deployments (CI/CD)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By automating away the process of deploying our code to the cloud, we enable our developers to focus on what matters most: writing code for new features. To do so, we build an automated deployment pipeline which consists of the following major steps:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"A typical CI/CD pipeline","src":"https://images.rightbalance.io/uploads/cicd-pipeline.svg"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can read more about CI/CD pipelines in our "},{"type":"element","tag":"a","props":{"href":"/solutions/ci-cd-like-ac-dc-rock-n-roll-with-continuous-integration-and-continuous-delivery"},"children":[{"type":"text","value":"CI/CD solution"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"efficient-monitoring-and-alerting","className":["subheading"]},"children":[{"type":"text","value":"Efficient Monitoring and Alerting"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Each cloud provider has a specific set of metrics associated with each Serverless resource. In the case of AWS Lambda, it reports the number of invocations, logs for each lambda, number of failures, and more metrics into "},{"type":"element","tag":"a","props":{"href":"https://aws.amazon.com/cloudwatch/","rel":["nofollow"],":target":"\\_blank"},"children":[{"type":"text","value":"CloudWatch"}]},{"type":"text","value":". We can set the alerts on our CloudWatch metrics to report to Slack, Email, and Text when some unusual activity happens. To make our monitoring efficient, our alerts will be precise and specific. So when they arrive, itâ€™s clear what happened and what to do next. Each alert has a severity level. If something is slightly off, it can go to Slack or email. And for some critical component outages, it can go to text or perhaps even a call for an on-call person using a "},{"type":"element","tag":"a","props":{"href":"https://www.pagerduty.com/","rel":["nofollow"],":target":"\\_blank"},"children":[{"type":"text","value":"PagerDuty"}]},{"type":"text","value":" alert."}]},{"type":"element","tag":"h3","props":{"id":"automated-testing","className":["subheading"]},"children":[{"type":"text","value":"Automated Testing"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Manual testing is great with one drawback: you need to do it again and again every time you push new code. Which leads to a costly big bang releases that are no fun. You donâ€™t want to waste your precious engineering time on manual testing. Instead, writing a comprehensive set of unit tests, functional tests, and integration tests will go a long way. You can add them to your "},{"type":"element","tag":"a","props":{"href":"/solutions/ci-cd-like-ac-dc-rock-n-roll-with-continuous-integration-and-continuous-delivery"},"children":[{"type":"text","value":"CI build pipeline"}]},{"type":"text","value":" to run every time you deploy your code automatically."}]},{"type":"element","tag":"h2","props":{"id":"execution","className":["heading"]},"children":[{"type":"text","value":"Execution"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://rightbalance.io/","rel":["nofollow"]},"children":[{"type":"text","value":"Right Balance"}]},{"type":"text","value":" is your development partner helping you seamlessly integrate Serverless into your technology stack. The Right Balance team helped many successful businesses to use Serverless to achieve their business goals. Most of the companies are running on the latest and greatest technology stack, producing a lot of features with increased velocity. Companies running on the latest technology stack is a fun and exciting place to work in. This helps with attracting some quality candidates in the current competitive job market."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When it comes to integrating new technology, it can be integrated in the following ways:"}]},{"type":"element","tag":"h3","props":{"id":"gradual-integration","className":["subheading"]},"children":[{"type":"text","value":"Gradual Integration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When the current system needs to stay in place and it still functions well, a gradual introduction of new technology makes the most sense. The advantage of such an approach is that itâ€™s flexible. It allows for the existing feature development to continue on the current platform while introducing new technology at the same time without any disruption."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this case, weâ€™ll start with integrating Serverless into one part of the overall system. Writing a new microservice from scratch and connecting it with the rest of the system using some API calls allows putting the architectural patterns in place laying out the groundwork for new development. Once the initial architecture is in place, we can expand further with either migrating the current platform over to the new stack step by step or continue on the new stack for the new feature development."}]},{"type":"element","tag":"h3","props":{"id":"system-rewrite","className":["subheading"]},"children":[{"type":"text","value":"System Rewrite"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the case where the entire system doesnâ€™t perform to its expectations when the current feature development is extremely slow and the existing staff doesnâ€™t want to deal with the system anymore, itâ€™s easier and more effective to rewrite the entire system all at once."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here, weâ€™ll build an entirely new system on the latest technology stack while having the old system running. Then weâ€™ll start migrating the user data over to the new system. Once the migration is complete, weâ€™ll switch over to the new system and turn off the old one. The users will see a new system as just a regular upgrade next time they log in."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is also a great opportunity to delight a user with some new features only available on a new system. In addition to it, itâ€™s a great time to update the look and feel of the product on the front end."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"what-is-serverless","depth":2,"text":"What is Serverless"},{"id":"why-serverless-matters","depth":2,"text":"Why Serverless Matters","children":[{"id":"pay-per-use","depth":3,"text":"Pay per use"},{"id":"all-major-cloud-providers-support-serverless","depth":3,"text":"All major cloud providers support Serverless"},{"id":"infinitely-scalable","depth":3,"text":"Infinitely Scalable"},{"id":"be-at-the-forefront-of-technology","depth":3,"text":"Be At the Forefront of Technology"}]},{"id":"business-problems-serverless-solves","depth":2,"text":"Business Problems Serverless Solves","children":[{"id":"power-your-websites-mobile-apps-and-iot-devices","depth":3,"text":"Power your Websites, Mobile Apps, and IoT Devices"},{"id":"deliver-relevant-data-to-stakeholders","depth":3,"text":"Deliver relevant data to stakeholders"},{"id":"reduce-infrastructure-cost","depth":3,"text":"Reduce Infrastructure Cost"},{"id":"increase-development-velocity","depth":3,"text":"Increase Development Velocity"},{"id":"handle-traffic-spikes-seamlessly","depth":3,"text":"Handle Traffic Spikes Seamlessly"}]},{"id":"solution","depth":2,"text":"Solution","children":[{"id":"strong-architecture","depth":3,"text":"Strong Architecture"},{"id":"efficient-monitoring-and-alerting","depth":3,"text":"Efficient Monitoring and Alerting"},{"id":"automated-testing","depth":3,"text":"Automated Testing"}]},{"id":"execution","depth":2,"text":"Execution","children":[{"id":"gradual-integration","depth":3,"text":"Gradual Integration"},{"id":"system-rewrite","depth":3,"text":"System Rewrite"}]}]}},"_type":"markdown","_id":"content:solutions:serverless-software-development-focus-on-features-instead-of-the-infrastructure.md","_source":"content","_file":"solutions/serverless-software-development-focus-on-features-instead-of-the-infrastructure.md","_extension":"md"}]